version: 2.1

workflows:
    version: 2
    build_and_test:
      jobs:
        - test:
            context:
              - HEROKU
              - AWS
        - deploy:
            context: HEROKU
            requires:
              - test
            filters:
              branches:
                only: master
        - deploy_aws:
            context: AWS
            requires:
              - test
            filters:
              branches:
                only: master

commands:
  install_terraform:
    steps:
    - run: curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.1.0/terraform_1.1.0_linux_amd64.zip
    - run: unzip /tmp/terraform.zip -d /tmp
    - run: mv /tmp/terraform ~/bin
    - run: export PATH="~/bin:$PATH"
  init_terraform:
    steps:
    - run: cd terraform && terraform init -input=false -backend-config="conn_str=$TERRAFORM_BACKEND"
  init_terraform_aws:
    steps:
    - run: cd terraformAws && terraform init -input=false
  push_image_to_ecr:
    steps:
      - run: docker build --target release -t release --build-arg BACKEND_URL=$BACKEND_URL_AWS .
      - run: echo 'export AWS_ACCOUNT_ID=`aws sts get-caller-identity --query "Account" --output text`' >> $BASH_ENV
      - run: aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - run: docker tag release:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todosfrontend-production:latest
      - run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todosfrontend-production:latest
      - run: IMAGES_TO_DELETE=$( aws ecr list-images --repository-name todosfrontend-production --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --output json ) && aws ecr batch-delete-image --repository-name todosfrontend-production --image-ids "$IMAGES_TO_DELETE" || true

jobs:
  test:
    machine:
      image: ubuntu-2004:202111-01
    steps:
      - checkout
      - run: make build
      - run: make audit
      - run: make test-ci
      - install_terraform
      - init_terraform
      - run: cd terraform && terraform plan -var app_name=$APP_NAME
  deploy:
    machine:
      image: ubuntu-2004:202111-01
    steps:
      - checkout
      - install_terraform
      - run: heroku container:login
      - init_terraform
      - run: cd terraform && terraform apply -input=false -auto-approve -var app_name=$APP_NAME
      - run: docker build -t todos-release --target release --build-arg BACKEND_URL=$BACKEND_URL .
      - run: docker tag todos-release registry.heroku.com/$APP_NAME/web
      - run: docker push registry.heroku.com/$APP_NAME/web
      - run: heroku container:release --app $APP_NAME web
  deploy_aws:
    machine:
      image: ubuntu-2004:202111-01
    steps:
      - checkout
      - install_terraform
      - init_terraform_aws
      - run: cd terraformAws && terraform apply -target=aws_ecr_repository.todos_repository -input=false -auto-approve -var app_name=$APP_NAME -var environment=production -var domain=$DOMAIN -var backend_url=$BACKEND_URL_AWS
      - push_image_to_ecr
      - run: cd terraformAws && terraform apply -input=false -auto-approve -var app_name=$APP_NAME -var environment=production -var domain=$DOMAIN -var backend_url=$BACKEND_URL_AWS